/**
 * Autogenerated by script gen tool
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System.Collections.Generic;
using ExcelImproter.Framework.Handler;
using ExcelImproter.Framework.Importer;
using ExcelImproter.Framework.Reader;
using GameConfigTools.Util;

namespace ExcelImproter.Project
{
    public partial class AeroLevelUpConfigHandler : ExcelConfigHandlerBase
    {
		private int aeroId;
		private int level;
		private int limitId;
		private int funcId;
    
        protected override void AutoParasTable(List<ExcelTable> sheetValues, ref string errMsg)
        {
            OnAutoParasBegin();

            if (sheetValues == null || sheetValues.Count == 0)
            {
                return;
            }
            for (int tableIndex = 0; tableIndex < sheetValues.Count; ++tableIndex)
            {
                List<List<string>> values = sheetValues[tableIndex].Data;
                for (int i = 0; i < values.Count; i++)
                {
                    if (!VaildUtil.IsLineNotNull(values[i]))
                    {
                        continue;
                    }
                    int row = i + 1;

if (!VaildUtil.TryConvert(values[i][0], out aeroId,int.MinValue,int.MaxValue))
{
	errMsg = string.Format("{8} {0}.xlsx sheet:[{1}] [{2},{3}]读取出现错误，{4}必须为{5} - {6} {7}型", this.GetConfigPath(), tableIndex, row,0+1, aeroId,int.MinValue,int.MaxValue,"int","aeroId");
	return;
}
if (!VaildUtil.TryConvert(values[i][1], out level,int.MinValue,int.MaxValue))
{
	errMsg = string.Format("{8} {0}.xlsx sheet:[{1}] [{2},{3}]读取出现错误，{4}必须为{5} - {6} {7}型", this.GetConfigPath(), tableIndex, row,1+1, level,int.MinValue,int.MaxValue,"int","level");
	return;
}
if (!VaildUtil.TryConvert(values[i][2], out limitId,int.MinValue,int.MaxValue))
{
	errMsg = string.Format("{8} {0}.xlsx sheet:[{1}] [{2},{3}]读取出现错误，{4}必须为{5} - {6} {7}型", this.GetConfigPath(), tableIndex, row,2+1, limitId,int.MinValue,int.MaxValue,"int","limitId");
	return;
}
if (!VaildUtil.TryConvert(values[i][3], out funcId,int.MinValue,int.MaxValue))
{
	errMsg = string.Format("{8} {0}.xlsx sheet:[{1}] [{2},{3}]读取出现错误，{4}必须为{5} - {6} {7}型", this.GetConfigPath(), tableIndex, row,3+1, funcId,int.MinValue,int.MaxValue,"int","funcId");
	return;
}
                    
                    
                    OnAutoParasLine(values[i],ref errMsg);
                    if (!string.IsNullOrEmpty(errMsg))
                    {
                        return;
                    }
                    
                }
            }
        }
    }
}